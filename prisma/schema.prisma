datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

// Next Auth
model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

// Next Auth
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

// Next Auth
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  role Role     @default(USER)

  accounts  Account[]
  sessions  Session[]
  // blogs     Blogs[]

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map("users")
}

// Next Auth
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Cams {
  area             String?
  country          String
  description      String?
  hidden           Boolean?  @default(false)
  id               Int      @id @default(autoincrement())
  imageName        String?  @map(name: "image_name")
  lat              Decimal?  @db.Decimal(precision: 8, scale: 6) @default(0)
  lng              Decimal?  @db.Decimal(precision: 9, scale: 6) @default(0)
  longDescription  String?  @map(name: "long_description")
  mbcHosted        Boolean?  @map(name: "mbc_hosted")  @default(false)
  mbcHostedYoutube Boolean?  @map(name: "mbc_hosted_youtube")  @default(false)
  moreCams         String?   @map(name: "more_cams")
  state            String?
  subarea          String?
  title            String
  titleSlug        String?  @map(name: "title_slug")
  topCam           Boolean?  @map(name: "top_cam") @default(false)
  webcamUrl        String   @map(name: "webcam_url")
  zip              String?

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "cams")
}

model Message {
  id         Int    @id @default(autoincrement())
  name    String
  email   String
  message String
  
  createdAt DateTime @default(now()) @map(name: "created_at")

  @@map(name: "message")
}

model Flag {
  id      Int    @id @default(autoincrement())
  camId   Int    @map(name: "cam_id")
  name    String
  email   String
  type    String
  message String

  createdAt DateTime @default(now()) @map(name: "created_at")

  @@map(name: "flag")
}

enum Role {
  USER
  ADMIN
}

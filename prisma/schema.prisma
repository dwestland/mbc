generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @map("updated_at")
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Cams {
  id               Int      @id(map: "cams_pkey_1") @default(autoincrement())
  title            String
  webcamUrl        String   @map("webcam_url")
  imageName        String?  @map("image_name")
  description      String?
  country          String
  state            String?
  area             String?
  subarea          String?
  lat              Decimal? @default(0) @db.Decimal(8, 6)
  lng              Decimal? @default(0) @db.Decimal(9, 6)
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @default(now()) @map("updated_at")
  topCam           Boolean? @default(false) @map("top_cam")
  hidden           Boolean? @default(false)
  longDescription  String?  @map("long_description")
  mbcHostedYoutube Boolean? @default(false) @map("mbc_hosted_youtube")
  moreCams         String?  @map("more_cams")
  titleSlug        String?  @map("title_slug")
  postalCode       String?  @map("postal_code")
  youtubeId        String?  @map("youtube_id")
  address          String?
  droneFootage     Boolean? @default(false) @map("drone_footage")

  @@map("cams")
}

model Message {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("message")
}

model Flag {
  id        Int      @id @default(autoincrement())
  camId     Int      @map("cam_id")
  name      String
  email     String
  type      String
  message   String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("flag")
}

enum Role {
  USER
  ADMIN
}
